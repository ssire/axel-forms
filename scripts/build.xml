<?xml version="1.0" encoding="UTF-8"?>
<project name="AXEL-FORMS" default="build.lib" basedir=".">
<!--
AXEL-FORMS Library built file system
====================================

Use this file to generate axel-forms.js with "ant". You can select the source files
to include in the library by editing "ant.properties".

Main targets:

build.lib: creates a minified axel-forms.js inside the dist folder

build.debug: creates a non-minified axel-forms.js inside the dist folder so that it can
             be used for debug

Author(s) : Stephane Sire
--> 

  <!-- 
     *****************************************************
     **             Initializations                     **
     *****************************************************
  -->    

  <target name="-load.properties">
    <property file="ant.properties"/>
    <loadfile property="release.number" 
              srcFile="release-nb.txt"/>    
  </target>

  <target name="-init.files" depends="-load.properties">
    <!-- ///////////////////////////////////////////////////////////////
         // AXEL-FORMS source files to be included inside the library //
         //             EDIT ant.properties to change it              //
         ///////////////////////////////////////////////////////////////
    -->
    <filelist id="files.core" dir="${core.src.dir}" files="${core.lib.files}"/>
    <filelist id="files.plugins" dir="${plugins.src.dir}" files="${plugins.lib.files}"/>
    <filelist id="files.filters" dir="${filters.src.dir}" files="${filters.lib.files}"/>
    <filelist id="files.bindings" dir="${bindings.src.dir}" files="${bindings.lib.files}"/>
    <filelist id="files.commands" dir="${commands.src.dir}" files="${commands.lib.files}"/>
    <filelist id="files.locales" dir="${locales.src.dir}" files="${locales.lib.files}"/>
  </target>

  <!-- "revision.number" property initialization
        It is set to the current revision number as per "svn info"; 
        note that this also works offline 
  -->
  <target name="-init.revision">
<!--    <exec executable="/bin/sh" outputproperty="revision.number">
      <arg line='-c "svn info -r "HEAD"| awk &quot;/Revision/{print\$$2}&quot;"'/>
    </exec> -->
    <property name="revision.number" value="TBD"/>
  </target>   

  <!-- *****************************************************
       **           Library build process                 **
       *****************************************************
  -->

  <target name="-flatten" depends="-load.properties, -init.files">
    <concat destfile="${build.dir}/${product.name}-tmp.js" force="no">
      <filelist refid="files.core"/>
      <filelist refid="files.plugins"/>
      <filelist refid="files.filters"/>
      <filelist refid="files.bindings"/>
      <filelist refid="files.commands"/>
      <filelist refid="files.locales"/>
    </concat>
  </target>

  <!-- Build minified axel-forms.js 
  --> 
  <target name="build.lib" depends="-load.properties, -init.files, -init.revision">

    <echo message="Creating minified AXEL-FORMS library into ${build.dir}" />
    <!-- FIXME : fail if not exist ${build.dir} -->
    <antcall target="-flatten" />

    <!-- Minify library file -->
    <java jar="${javascript.compressor}" fork="true">
      <arg line="-o ${build.dir}/${product.name}-min.js ${build.dir}/${product.name}-tmp.js" />
    </java>

    <!-- Add license notice and copy to dest -->
    <filter token="VERSION" value="${release.number}"/>
    <!-- <filter token="VERSION" value="${version.number}"/> -->
    <!-- <filter token="REV" value="${revision.number}"/> -->

    <copy file="../license/header.txt" tofile="${build.dir}/header.txt" filtering="true"/>

    <concat destfile="${build.dir}/${product.name}.js" force="no">
      <file file="${build.dir}/header.txt"/>
      <file file="${build.dir}/${product.name}-min.js"/>
    </concat>

    <delete file="${build.dir}/${product.name}-tmp.js"/>
    <delete file="${build.dir}/header.txt"/>
    <delete file="${build.dir}/${product.name}-min.js"/>
  </target>

  <!-- Build debug version of axel-form.js 
       (simple concatenation of source files) 
  -->
  <target name="build.debug" depends="-load.properties, -init.files, -init.revision">
    <echo message="Creating debug AXEL-FORMS library into ${build.dir}"/>
    <!-- FIXME : fail if not exist ${build.dir} -->

    <antcall target="-flatten"/>
    <!-- Add license notice and copy to dest -->
    <!-- <filter token="COPYRIGHT" value="${distrib.copyright}"/>
    <filter token="VERSION" value="${release.number}"/>
    <filter token="LICENSE" value="${distrib.license}"/>
    <filter token="REV" value="${revision.number}"/> -->
    <concat destfile="${build.dir}/${product.name}.js" force="no">
      <file file="../license/header.txt"/>
      <file file="${build.dir}/${product.name}-tmp.js"/>
    </concat>
    <!-- <copy file="${build.dir}/${product.name}-brut.js" tofile="${build.dir}/${product.name}.js" filtering="true"/> -->
    <!-- <delete file="${build.dir}/${product.name}-brut.js"/> -->
    <delete file="${build.dir}/${product.name}-tmp.js"/>
    <!-- FIXME: do VERSION filtering stuff -->
  </target>

  <!-- *****************************************************
       **                 Utilities                       **
       *****************************************************
  -->
</project>
