<!DOCTYPE html>
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xt="http://ns.inria.org/xtiger" xml:lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

    <title>The "input" plugin</title>

    <xt:head version="1.1" templateVersion="1.0" label="Demo">

      <xt:component name="t_civility">
        <label><xt:use types="input" label="Civilite" param="type=radio;cardinality=3;name=gender;value=M;"/>Mr</label>
        <label><xt:use types="input" label="Civilite" param="type=radio;cardinality=3;name=gender;value=Mrs;"/>Mrs</label>
        <label><xt:use types="input" label="Civilite" param="type=radio;cardinality=3;name=gender;value=Ms;"/>Ms</label>
      </xt:component>

      <xt:component name="t_person">
        <xt:use types="t_civility"/> <xt:use types="input" label="Name">name of 1st team member</xt:use>
      </xt:component>

      <!-- wrong example  -->
      <xt:component name="t_civility_nocard">
        <label><xt:use types="input" label="Civilite" param="type=radio;name=gender;value=M;"/>Mr</label>
        <label><xt:use types="input" label="Civilite" param="type=radio;name=gender;value=Mrs;"/>Mrs</label>
        <label><xt:use types="input" label="Civilite" param="type=radio;name=gender;value=Ms;"/>Ms</label>
      </xt:component>

      <!-- wrong example  -->
      <xt:component name="t_person_nocard">
        <xt:use types="t_civility_nocard"/> <xt:use types="input" label="Name">name of 1st team member</xt:use>
      </xt:component>
    </xt:head>


    <style type="text/css">
      .axel-core-editable[contenteditable] {
        border: none !important;
        outline: 0px solid transparent;
      }
      .multi {
        -moz-column-count: 2;
        -moz-column-gap: 25px;
        -webkit-column-count: 2;
        -webkit-column-gap: 25px;
      }
      span.styled {
        font-size: 120%;
        font-family: Garamond, Arial;
        color: brown;
      }
      textarea.multilines {
        vertical-align: top;
        width: 100%;
        resize: vertical;
        overflow: none;
        min-height: 180px;
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
      }
    </style>

    <!-- SELF-TRANSFORMED template -->
    <!-- because 'date' sub-type only available when jQuery is inside the same window -->
    <link href="../../../axel/axel/axel.css" rel="stylesheet" type="text/css"></link>
    <script src="../../../axel/3rd-part/jquery/js/jquery-3.4.1.min.js">//</script>
    <script src="../../../axel/axel/axel.js">//</script>
    <script src="../../src/plugins/input.js">//</script>
    <script data-bundles-path="../../../axel/axel/bundles" src="../../dist/axel-forms.js">//</script>

    <!-- 3rd party dependencies -->
    <link rel="stylesheet" type="text/css"
          href="../../../axel/3rd-part/jquery/css/ui-lightness/jquery-ui-1.10.4.custom.min.css"  charset="utf-8" />
    <script type="text/javascript" src="../../../axel/3rd-part/jquery/js/jquery-ui-1.10.4.custom.min.js"></script>

    <!-- template enrichment : extracts and generates xt:attribute and xt:use sample code -->
    <link rel="stylesheet" type="text/css" href="../../../axel/templates/shared/demo.css" />
    <script type="text/javascript" charset="utf-8" src="../../../axel/templates/shared/demo.js"></script>
  </head>
  <body data-template="#">

    <h1>The <code>"input"</code> plugin</h1>

    <p>The <code>"input"</code> plugin is a facade on a native HTML <code>input</code> element. It's display is the same in static view and in editing view, making it well fitted form traditional form-based interaction.</p>

    <h2>Parameters</h2>

    <ul class="parameters">
      <li><var>type</var> (<code><b>text</b>|textarea|radio|checkbox|date</code>) : type of control to build</li>
      <li><var>class</var> (<code>name</code>) : optional, sets a class name on the handle (i.e. the HTML <code>input</code> element generated by this plugin)</li>
      <li><var>multilines</var> (<code><b>normal</b>|enhanced</code>) : allows multiple paragraphs entries when <em>type</em> is set to <em>textarea</em>, each paragraph is serialized in a <code>Text</code> element (the <em>Text</em> element name cannot be changed); the <em>enhanced</em> mode extends the input model with a <code>Block</code> of one or more <code>Line</code> elements when entering successive paragraphs without an empty separation line (the <em>Block</em> and <em>Line</em> element name cannot be changed); multilines entries are normalized to avoid blank lines; multilines fields can also read plain text content which will be converted on the fly to multilines entry, this can be useful to avoid a migration when upgrading an application data model</li>
    </ul>

    <h3>Parameters specific to <code>text</code> and <code>date</code> controls</h3>

    <ul class="parameters">
      <li><var>size</var> (unset by default) : specifies the size in characters of the input field, it will be set as a <tt>size</tt> attribute on the <tt>input</tt> created to implement the field</li>
    </ul>

    <h3>Parameters specific to <code>radio</code> or <code>checkbox</code> controls :</h3>

    <ul class="parameters">
      <li><var>name</var> (<code>name</code>) : seed to create radio or checkbox buttons belonging to the same group; it is used to generate the HTML <i>name</i> attribute</li>
      <li><var>checked</var> (<code><i>string</i></code>) : this parameter can be set on the first control in a group with same <i>name</i>, it takes for value a single value taken amongst the values of the of a radio or a checkbox that will be checked by default, it is currently limited to a single value</li>
      <li><var>cardinality</var> (<code>integer</code>) : this hint is required when you instantiate several times the same <code>xt:component</code> that contains <code>input</code> elements of type <code>radio</code> inside a template;  its value is the total number of radio buttons within the group; it must be set on each <code>input</code> control in the group; it will be used to generate a unique name for the group</li>
      <li><var>noxml</var> (<code><b>false</b> | true</code>) : when set to <i>true</i> the value will not be serialized to XML and the corresponding node element will be discarded</li>
    </ul>

    <p>NOTE: although the <var>name</var> parameter may seem redundant with the <code>label</code> attribute, they both MUST be set on the <code>xt:use</code> element for the <code>radio</code> or <code>checkbox</code> controls to work properly.</p>

    <h3>Parameters specific to <code>date</code> controls :</h3>

    <ul class="parameters">
      <li><var>date_region</var> (<code><b>fr</b></code>) : specifies the user interface language (currently only 'fr', but you can edit the <code>src/filters/date.js</code> file in AXEL distribution (be careful we really meant AXEL and not AXEL-FORMS) to add another region)</li>
      <li><var>date_format</var> (<code><b>ISO_8601</b></code>) : specifies the date format used in XML output (read and write). You can use any datepicker date format string (e.g. 'dd/mm/yy'), or a $.datepicker constant name such as <code>ISO_8601</code> (others are <code>ATOM, COOKIE, RFC_822, RFC_850, RFC_1036, RFC_1123, RFC_2822, RSS, TICKS, TIMESTAMP, W3C</code>)</li>
      <li><var>minDate</var> (unset by default) : lower bound on the date that can be entered (in <var>date_region</var> format), the special value <tt>today</tt> is converted to the current day</li>
      <li><var>maxDate</var> (unset by default) : upper bound on the date that can be entered (in <var>date_region</var> format), the special value <tt>today</tt> is converted to the current day</li>
      <li><var>beforeShow</var> (unset by default) : to be documented</li>
    </ul>

    <p>In order to use the <code>date</code> control you MUST include jQuery datepicker module inside the same window as the transformed template.</p>

    <h2>Default configuration (default <em>text</em> or explicit <em>textarea</em> type parameter)</h2>

    <div class="demo extract">
      <p>First name : <xt:use types="input" label="FirstName"/></p>
      <p><xt:use types="input" label="LastName">Enter last name</xt:use></p>
      <p><xt:use types="input" label="Nickname" param="filter=optional">Enter nickname</xt:use></p>
      <p>With <var>size</var> parameter set to 50 : <xt:use types="input" label="FullName" param="filter=optional;size=50">Enter full name</xt:use></p>
      <p>With <i>type="textarea"</i> and  <i>multilines="normal"</i>: <xt:use types="input" label="NormalComment" param="type=textarea;multilines=normal;class=multilines">Commentaire</xt:use></p>
      <p>With <i>type="textarea"</i> and  <i>multilines="enhanced"</i>: <xt:use types="input" label="EnhancedComment" param="type=textarea;multilines=enhanced;class=multilines">Commentaire</xt:use></p>
    </div>

    <h2>Example with <code>noedit</code> set to <tt>true</tt></h2>

    <div class="demo extract">
      <p>First name : <xt:use types="input" label="FirstName" param="noedit=true"/></p>
      <p><xt:use types="input" label="LastName" param="noedit=true">Enter last name</xt:use></p>
      <p><xt:use types="input" label="Nickname" param="filter=optional;noedit=true">Enter nickname</xt:use></p>
    </div>

    <h2>Example with several dates (try using tab navigation...)</h2>

    <div class="demo extract">
      <p>Date 1 (minDate = today; 'en'; today) : <xt:use types="input" label="Date" param="type=date;date_region=en;date_format=ISO_8601;minDate=today">today</xt:use></p>
      <br/>
      <div>
      <p>Date 2 (maxDate = today, dd#mm##yy, 'fr', today) : <xt:use types="input" label="Date" param="type=date;date_region=fr;date_format=dd#mm##yy;maxDate=today;class=foo">today</xt:use></p>
      </div>
      <br/>
      <div>
      <p>Date 3 (maxDate = 2015-01-19, 'en', 2014-12-31) : <xt:use types="input" label="Date" param="type=date;date_region=en;date_format=ISO_8601;maxDate=2015-01-19;class=foo">2014-12-31</xt:use></p>
      </div>
    </div>

    <h2>Example with radio buttons </h2>

    <div class="demo extract">
      <label><xt:use types="input" label="Flavor" param="type=radio;name=flavor1;value=strawberry"/>strawberry</label>
      <label><xt:use types="input" label="Flavor" param="type=radio;name=flavor1;value=vanilla"/>vanilla</label>
      <label><xt:use types="input" label="Flavor" param="type=radio;name=flavor1;value=chocolate;"/>chocolate</label>
    </div>

    <h3>Example with <code>checked</code> for a default selection</h3>

    <div class="demo extract">
      <label><xt:use types="input" label="FlavorDefault" param="type=radio;name=flavor2;value=strawberry;checked=vanilla"/>strawberry</label>
      <label><xt:use types="input" label="FlavorDefault" param="type=radio;name=flavor2;value=vanilla"/>vanilla</label>
      <label><xt:use types="input" label="FlavorDefault" param="type=radio;name=flavor2;value=chocolate;"/>chocolate</label>
    </div>
    
    <h3>Example with <code>checked</code> and <code>noxml</code> for a non-serialized default selection</h3>

    <div class="demo extract">
      <label><xt:use types="input" label="FlavorDefaultNotSerialized" param="type=radio;name=flavor3;value=strawberry;checked=chocolate"/>strawberry</label>
      <label><xt:use types="input" label="FlavorDefaultNotSerialized" param="type=radio;name=flavor3;value=vanilla"/>vanilla</label>
      <label><xt:use types="input" label="FlavorDefaultNotSerialized" param="type=radio;name=flavor3;value=chocolate;noxml=true"/>chocolate</label>
    </div>

    <h2>Example with check boxes</h2>

    <div class="demo extract">
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=chips;"/>chips</label>
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=sticks;"/>bread sticks</label>
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=cookie;"/>cookie</label>
    </div>

    <h3>Example with <code>noedit</code> set to <tt>true</tt></h3>

    <div class="demo extract">
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=chips;noedit=true"/>chips</label>
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=sticks;noedit=true"/>bread sticks</label>
      <label><xt:use types="input" label="Extra" param="type=checkbox;name=extra;value=cookie;noedit=true"/>cookie</label>
    </div>

    <h2>Example of multiple instantiation of the same <code>xt:component</code></h2>

    <div class="source">
      <pre>&lt;xt:component name=&quot;t_civility&quot;&gt;
  &lt;label&gt;&lt;xt:use types=&quot;input&quot; label=&quot;Civilite&quot; param=&quot;type=radio;cardinality=3;name=gender;value=M;&quot;/&gt;Mr&lt;/label&gt;
  &lt;label&gt;&lt;xt:use types=&quot;input&quot; label=&quot;Civilite&quot; param=&quot;type=radio;cardinality=3;name=gender;value=Mrs;&quot;/&gt;Mrs&lt;/label&gt;
  &lt;label&gt;&lt;xt:use types=&quot;input&quot; label=&quot;Civilite&quot; param=&quot;type=radio;cardinality=3;name=gender;value=Ms;&quot;/&gt;Ms&lt;/label&gt;
&lt;/xt:component&gt;

&lt;xt:use types=&quot;t_civility&quot;/&gt; &lt;xt:use types=&quot;input&quot; label=&quot;Name&quot;&gt;name of 1st team member&lt;/xt:use&gt;
&lt;xt:use types=&quot;t_civility&quot;/&gt; &lt;xt:use types=&quot;input&quot; label=&quot;Name&quot;&gt;name of 1st team member&lt;/xt:use&gt;
      </pre>
    </div>
    <div class="demo">
      <p>Player 1 : <xt:use types="t_person" label="Player1"/></p>
      <p>Player 2 : <xt:use types="t_person" label="Player2"/></p>
    </div>

    <p>If you forget <code>cardinality</code> :</p>
    <div class="demo">
      <p>Player 3 : <xt:use types="t_person_nocard" label="Player3"/></p>
      <p>Player 4 : <xt:use types="t_person_nocard" label="Player4"/></p>
    </div>
  </body>
</html>
